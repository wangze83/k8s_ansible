---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polefs-csi-node-account
  namespace: wz-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: polefs-csi-node-role-binding
subjects:
  - kind: ServiceAccount
    name: polefs-csi-node-account
    namespace: wz-system
roleRef:
  kind: ClusterRole
  name: polefs-csi-node-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: polefs-csi-node-role
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: polefs-csi-share-node
  namespace: wz-system
spec:
  selector:
    matchLabels:
      app: polefs-csi-share-node
  template:
    metadata:
      labels:
        app: polefs-csi-share-node
    spec:
      tolerations:
        - operator: "Exists"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/controlplane
                    operator: NotIn
                    values: ["true"]
      serviceAccountName: polefs-csi-node-account
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: x-harbor
      containers:
        - name: node-driver-registrar
          image: harbor.wz.cn/common/csi-node-driver-registrar:v1.1.0
          resources:
            limits:
              cpu: "2"
              memory: 4000Mi
            requests:
              cpu: 1000m
              memory: 4000Mi
          args:
            - "--csi-address=/csi/polefs-csi-share.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/csi.share.com/polefs-csi-share.sock"
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: registration-dir
              mountPath: /registration
            - name: socket-dir
              mountPath: /csi
        - name: node
          image: harbor.wz.cn/common/polefs-csi-driver:v3.0.3
          resources:
            limits:
              cpu: "2"
              memory: 4000Mi
            requests:
              cpu: 1000m
              memory: 4000Mi
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          args:
            - "--v=5"
            - "--endpoint=unix:///csi/polefs-csi-share.sock"
            - "--nodeid=$(NODE_ID)"
            - "--drivername=csi.share.com"
            - "--version=v1.0.0"
          lifecycle:
            preStop:
              exec:
                command: [
                  "/bin/sh",
                  "-c",
                  "rm -rf /csi/polefs-csi-share.sock /registration/csi.share.com-reg.sock"
                ]
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: registration-dir
              mountPath: /registration
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - mountPath: /polefs/conf
              name: polefs-conf
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.share.com
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
        - name: polefs-conf
          hostPath:
            path: /etc/polefs/conf
            type: DirectoryOrCreate